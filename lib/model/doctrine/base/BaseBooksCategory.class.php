<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BooksCategory', 'doctrine');

/**
 * BaseBooksCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $books_category_id
 * @property string $name
 * @property integer $big_books_category_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property BigBooksCategory $BigBooksCategory
 * @property Doctrine_Collection $Books
 * 
 * @method integer             getBooksCategoryId()       Returns the current record's "books_category_id" value
 * @method string              getName()                  Returns the current record's "name" value
 * @method integer             getBigBooksCategoryId()    Returns the current record's "big_books_category_id" value
 * @method timestamp           getCreatedAt()             Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()             Returns the current record's "updated_at" value
 * @method BigBooksCategory    getBigBooksCategory()      Returns the current record's "BigBooksCategory" value
 * @method Doctrine_Collection getBooks()                 Returns the current record's "Books" collection
 * @method BooksCategory       setBooksCategoryId()       Sets the current record's "books_category_id" value
 * @method BooksCategory       setName()                  Sets the current record's "name" value
 * @method BooksCategory       setBigBooksCategoryId()    Sets the current record's "big_books_category_id" value
 * @method BooksCategory       setCreatedAt()             Sets the current record's "created_at" value
 * @method BooksCategory       setUpdatedAt()             Sets the current record's "updated_at" value
 * @method BooksCategory       setBigBooksCategory()      Sets the current record's "BigBooksCategory" value
 * @method BooksCategory       setBooks()                 Sets the current record's "Books" collection
 * 
 * @package    BookCity
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBooksCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('books_category');
        $this->hasColumn('books_category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('big_books_category_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('BigBooksCategory', array(
             'local' => 'big_books_category_id',
             'foreign' => 'big_books_category_id'));

        $this->hasMany('Books', array(
             'local' => 'books_category_id',
             'foreign' => 'books_category_id'));
    }
}