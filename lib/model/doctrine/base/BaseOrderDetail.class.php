<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('OrderDetail', 'doctrine');

/**
 * BaseOrderDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $detail_id
 * @property integer $number
 * @property float $discount
 * @property string $book_name
 * @property float $book_price
 * @property string $description
 * @property integer $orders_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Ordered $Ordered
 * 
 * @method integer     getDetailId()    Returns the current record's "detail_id" value
 * @method integer     getNumber()      Returns the current record's "number" value
 * @method float       getDiscount()    Returns the current record's "discount" value
 * @method string      getBookName()    Returns the current record's "book_name" value
 * @method float       getBookPrice()   Returns the current record's "book_price" value
 * @method string      getDescription() Returns the current record's "description" value
 * @method integer     getOrdersId()    Returns the current record's "orders_id" value
 * @method timestamp   getCreatedAt()   Returns the current record's "created_at" value
 * @method timestamp   getUpdatedAt()   Returns the current record's "updated_at" value
 * @method Ordered     getOrdered()     Returns the current record's "Ordered" value
 * @method OrderDetail setDetailId()    Sets the current record's "detail_id" value
 * @method OrderDetail setNumber()      Sets the current record's "number" value
 * @method OrderDetail setDiscount()    Sets the current record's "discount" value
 * @method OrderDetail setBookName()    Sets the current record's "book_name" value
 * @method OrderDetail setBookPrice()   Sets the current record's "book_price" value
 * @method OrderDetail setDescription() Sets the current record's "description" value
 * @method OrderDetail setOrdersId()    Sets the current record's "orders_id" value
 * @method OrderDetail setCreatedAt()   Sets the current record's "created_at" value
 * @method OrderDetail setUpdatedAt()   Sets the current record's "updated_at" value
 * @method OrderDetail setOrdered()     Sets the current record's "Ordered" value
 * 
 * @package    BookCity
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrderDetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order_detail');
        $this->hasColumn('detail_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('number', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('discount', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('book_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('book_price', 'float', 18, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('orders_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ordered', array(
             'local' => 'orders_id',
             'foreign' => 'orders_id'));
    }
}